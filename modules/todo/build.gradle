plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'

	// OpenAPI Generator
	id "org.openapi.generator" version "4.2.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2020.0.0-M6")
}

dependencies {
	// DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Boot Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Spring Cloud Sleuth
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

	// Spring Security (OAUTH2 Resource Server)
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	// Web
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// for OpenAPI Generator
	implementation "org.springframework.boot:spring-boot-starter-validation"
	compile "io.springfox:springfox-swagger-ui:2.9.2"
    compile "io.springfox:springfox-swagger2:2.9.2"
	compile "org.openapitools:jackson-databind-nullable:0.2.1"

	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	runtimeOnly 'io.r2dbc:r2dbc-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	// Spring JMS (ActiveMQ)
	implementation 'org.springframework:spring-jms'
	implementation 'jakarta.jms:jakarta.jms-api'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-starter-activemq'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

// OpenAPI
task buildTodoServer(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/spec/todo.yml"
    outputDir = "$buildDir/generated"
	modelNameSuffix = "Resource"
	configOptions = [
		apiPackage: 'com.example.api.todo.server.api',
		invokerPackage: 'com.example.api.todo.server.invoker',
		modelPackage: 'com.example.api.todo.server.model',
		dateLibrary: 'legacy',
		java8: 'true',
		reactive: 'true',
		interfaceOnly: 'true',
	]
    systemProperties = [
        modelDocs: 'false'
    ]
}

// compileJava のタスク実行前に buildTodoServer タスクを実行する。
compileJava.dependsOn tasks.buildTodoServer

// 生成したコードの出力先をソースフォルダに設定（コンパイル対象にするために）
sourceSets.main.java.srcDir "${buildTodoServer.outputDir.get()}/src/main/java"
sourceSets.main.resources.srcDir "${buildTodoServer.outputDir.get()}/src/main/resources"
